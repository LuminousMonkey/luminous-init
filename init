#!/bin/zsh
# Get my home directory sorted quickly.
#
# This is not my file, it's just ripped off from
main() {
    set -e
    welcome
    demand_git
    choose_remote_gitlab_type
    cd
    get_base_dotdotdot_system
    configure_dotdotdot_conf_file
    .../... super_update_install </dev/null
}

configure_dotdotdot_conf_file() {
    conf=~/.../conf
    cyan_line Configuring the $conf file
    echo
    echo install_method: symlink > $conf
    echo dots: >> $conf
    no_biggie='Skipping this repo should cause no problems.'
    luminous_default loop
    luminous_default sane
    luminous_default 1337
    luminous tmux \
'The ,t command (session create-or-attach), plus a tweaked ~/.tmux.conf' \
"Skip if you do not use tmux (but who doesn't use tmux?)"
    luminous vim \
'A wad of scripts and plugins for vim' "$no_biggie"
    luminous emacs \
        'Emacs config, if that floats your boat' "$no_biggie"
    luminous git \
'A pile of trs gt cmnds, plus a few config file tweaks.' \
'Decline if you do not want to enjoy a bunch of shortcuts.'
    luminous mercurial \
'My Mercurial config.'
    cyan_line OS-dots
    luminous posix 'Common *nix tools: ,i = install; ,s = search; etc' \
        "$no_biggie"
    luminous x 'X11 config (good for OS X, too)' "$no_biggie"
    luminous xmonad 'XMonad config, if you use that.'
    luminous monkey 'My personal config.'
    if [ -d /Library ]; then
        luminous mac \
'A few spiffups for OS X. Needs more stuff, but should be OK' "$no_biggie"
    elif [ Linux = "`uname`" ]; then
        luminous linux 'Linux-specific stuff' "$no_biggie"
    fi

    cyan_line OK. Created the following in $conf
    cat $conf
}

welcome() {
    cat <<EOF
`cyan Luminous Monkey home init script.`
A few quick prompts and you are on your way.

EOF
}

demand_git() {
    if ! type git 2>&1 >/dev/null; then
        cat <<EOF
`red git not found`. This really won't work without it.

EOF
        exit 1
    fi
}

choose_remote_gitlab_type() {
    binary_prompt \
        h "Using https means you don't have to set up SSH keys." \
        s "Using ssh means you can 'git push' without password prompts." \
        " Gitlab remotes are: `green h`ttps or `yellow s`sh (default):"
    if [ 's' = "$got" ]; then
        eval `ssh-agent`
        ssh-add
        gl_base='git@gitlab.com:'
    elif [ 'h' = "$got" ]; then
        gl_base='https://gitlab.com/'
    else
        red_line "Uh-oh. Unrecognised '$got'."
    fi
    echo $gl_base
}

ask_to_add_gitlab_repo() {
    cyan_line "https://gitlab.com/$1"
    binary_prompt y "$2" n "$3" \
        "Choose `green y` to add this repo (default), or `yellow n` to skip:"
    if [ 'y' = "$got" ]; then
        echo "- repo: $gl_base$1" >> $conf
    fi
    echo
}

luminous() {
    ask_to_add_gitlab_repo LuminousMonkey/$1-dots "$2" "$3"
}

add_gitlab_repo() {
    cyan_line "https://gitlab.com/$1"
    echo "- repo: $gl_base$1" >> $conf
}

luminous_default() {
    add_gitlab_repo LuminousMonkey/$1-dots
}

get_base_dotdotdot_system() {
    [ -e .../... ] && return
    cyan_line Getting the ... base system
    git clone https://github.com/ingydotnet/... || exit 2
}

red() { printf "\033[31;1m%s\033[0m" "$*"; }
red_line() { echo `red "$@"`; }
yellow() { printf "\033[33m%s\033[0m" "$*"; }
yellow_line() { echo `yellow "$@"`; }
green() { printf "\033[32m%s\033[0m" "$*"; }
green_line() { echo `green "$@"`; }
cyan() { printf "\033[36;1m%s\033[0m" "$*"; }
cyan_line() { echo `cyan "$@"`; }

binary_prompt() {
    a=$1
    green_line $2
    b=$3
    yellow_line $4
    prompt=$5
    printf "$prompt "
    unset got
    until [ -n "$got" ]; do
        read got
        [ '' = "$got" ] && got=$a
        case $got in
            $a*) got=$a;;
            $b*) got=$b;;
            *)
                red_line "'$got' was neither $a, nor $b, nor blank (implying $a)."
                printf 'Please try again: '
                unset got
        esac
    done
}

main
